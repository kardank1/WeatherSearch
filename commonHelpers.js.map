{"version":3,"file":"commonHelpers.js","sources":["../src/js/marckup.js","../src/js/API.js","../src/main.js"],"sourcesContent":["\nexport function createMarkup({ name, sys:{country}, main:{feels_like, humidity, pressure,temp}, weather}) {\n    return  `<div class=\"weather-card\"><div><h2>${name}, ${\n   country\n  }</h2><img src=\"http://openweathermap.org/img/w/${\n    weather[0].icon\n  }.png\" width=\"80px\"><p>${\n    weather[0].description\n  }</p></div><div><p>Temperature: ${\n    temp\n  }&#8451;</p><p>Feels like: ${  feels_like\n  }&#8451;</p><p>Humidity: ${humidity}%</p><p>Pressure: ${pressure}</p></div>\n  </div>\n  `;\n}","\n\nexport function getCity(city) {\n    const link = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=117bcd5592950f9f701a11f5ab982de0&units=metric`\n    return fetch(link).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status) \n        } return response.json(); \n        \n    }).catch(er => console.log(er))\n\n}\n","//import \"./js/promise.js\"\n// 1. Створи застосунок для пошуку погоди в своєму місті\n// Використовуй API https://openweathermap.org/api\n// (Current Weather Data -> Built-in API request by city name)\n// створи файл api.js що робитиме запит на бек\n// створи файл create-markup.js для створення розмітки (https://prnt.sc/LEataI862RLd)\n// додай пошук погоди в конкретному місті використовуючи форму\nimport iziToast from \"izitoast\";\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { createMarkup } from \"./js/marckup\";\nimport { getCity } from \"./js/API\";\n\nconst inputForm = document.getElementById('searchForm');\nconst weatherDetails = document.querySelector('#weatherDetails'); \n\ninputForm.addEventListener(\"submit\", formSearch)\n\nfunction formSearch(event) {\nevent.preventDefault()\nconst query = event.target.name.value.trim()\nweatherDetails.innerHTML = ''\n\nif (!query) {\n  return iziToast.warning({message: \"Enter city name\"})\n}\ngetCity(query).then(data => {\n  if (!data) {\n    return iziToast.error({message: \"Please write a real city name\" })\n  }\n  weatherDetails.insertAdjacentHTML(\"beforeend\", createMarkup(data))  \n}).catch(error => {\n  iziToast.error({message: \"Something went wrong\"})\n})\n.finally(() => inputForm.reset()) \n}"],"names":["createMarkup","name","country","feels_like","humidity","pressure","temp","weather","getCity","city","link","response","er","inputForm","weatherDetails","formSearch","event","query","iziToast","data","error"],"mappings":"svBACO,SAASA,EAAa,CAAE,KAAAC,EAAM,IAAI,CAAC,QAAAC,CAAO,EAAG,KAAK,CAAC,WAAAC,EAAY,SAAAC,EAAU,SAAAC,EAAS,KAAAC,CAAI,EAAG,QAAAC,CAAO,EAAG,CACtG,MAAQ,sCAAsCN,CAAI,KACnDC,CACH,kDACIK,EAAQ,CAAC,EAAE,IACf,yBACIA,EAAQ,CAAC,EAAE,WACf,kCACID,CACD,6BAA8BH,CACjC,2BAA6BC,CAAQ,qBAAqBC,CAAQ;AAAA;AAAA,GAGlE,CCZO,SAASG,EAAQC,EAAM,CAC1B,MAAMC,EAAO,qDAAqDD,CAAI,uDACtE,OAAO,MAAMC,CAAI,EAAE,KAAKC,GAAY,CAChC,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EACjC,OAAOA,EAAS,MAE1B,CAAK,EAAE,MAAMC,GAAM,QAAQ,IAAIA,CAAE,CAAC,CAElC,CCCA,MAAMC,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAiB,SAAS,cAAc,iBAAiB,EAE/DD,EAAU,iBAAiB,SAAUE,CAAU,EAE/C,SAASA,EAAWC,EAAO,CAC3BA,EAAM,eAAgB,EACtB,MAAMC,EAAQD,EAAM,OAAO,KAAK,MAAM,KAAM,EAG5C,GAFAF,EAAe,UAAY,GAEvB,CAACG,EACH,OAAOC,EAAS,QAAQ,CAAC,QAAS,iBAAiB,CAAC,EAEtDV,EAAQS,CAAK,EAAE,KAAKE,GAAQ,CAC1B,GAAI,CAACA,EACH,OAAOD,EAAS,MAAM,CAAC,QAAS,+BAA+B,CAAE,EAEnEJ,EAAe,mBAAmB,YAAad,EAAamB,CAAI,CAAC,CACnE,CAAC,EAAE,MAAMC,GAAS,CAChBF,EAAS,MAAM,CAAC,QAAS,sBAAsB,CAAC,CAClD,CAAC,EACA,QAAQ,IAAML,EAAU,OAAO,CAChC"}